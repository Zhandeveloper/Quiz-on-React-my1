import './index.scss';
import React, { useEffect } from 'react';

const questions = [{
  title:'–ü—Ä–∏–≤–µ—Ç,—ç—Ç–æ –º–∏–Ω–∏-—Ç–µ—Å—Ç –ø—Ä–æ –∑–Ω–∞–Ω–∏—è IT üë®‚Äçüíª —Ç—ã —Ö–æ—á–µ—à—å –µ–≥–æ –ø—Ä–æ–π—Ç–∏?',
  variants:["–î–∞"]
},

  {
    title: 'React - —ç—Ç–æ ... ?',
    variants: ['–±–∏–±–ª–∏–æ—Ç–µ–∫–∞', '—Ñ—Ä–µ–π–º–≤–æ—Ä–∫', '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'],
    correct: 0,
  },
  {
    title: '–î–ª—è —á–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ aiogram?',
    variants: ['—Å–æ–∑–¥–∞–Ω–∏–µ –ò–ò', '—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–≥ –±–æ—Ç–æ–≤', '–¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π'],
    correct: 1,
  },
  {
    title: '–ß—Ç–æ —Ç–∞–∫–æ–µ GitHub?',
    variants: [
      '–≤–µ–±-—Å–µ—Ä–≤–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Git –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –æ–Ω–ª–∞–π–Ω',
      '–ò–≥—Ä–æ–≤–æ–π –¥–≤–∏–∂–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è 2–¥ –∏–≥—Ä',
      '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é',
    ],
    correct: 0,
  },
  {
    title: '–ö–∞–∫–æ–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Unity?',
    variants: [
      'C++',
      'Python',
      'C#',
    ],               
    correct: 2,
  },
  {
    title: '–ö–∞–∫–∏–µ –∏–∑ —ç—Ç–∏—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω—ã?',
    variants: [
      'HTTP',
      'FTP',
      'HTTPS',
    ],               
    correct: 2,
  },
  {
    title: '–ß—Ç–æ —Ç–∞–∫–æ–µ while –≤ Python?',
    variants: [
      '–¶–∏–∫–ª',
      '–§—É–Ω–∫—Ü–∏—è',
      '–£—Å–ª–æ–≤–Ω–æ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä',
    ],               
    correct: 0,
  },
  {
    title: '–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å –∏–∑–º–µ–Ω—è–µ–º—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ JavaScript?',
    variants: [
      'object',
      'let',
      'const',
    ],               
    correct: 1,
  },
  {
    title: '–ö—Ç–æ –∏–∑–æ–±—Ä—ë–ª –ò–Ω—Ç–µ—Ä–Ω–µ—Ç?',
    variants: [
      '–¢–∏–º –ë–µ—Ä–Ω–µ—Ä—Å-–õ–∏',
      '–õ–∏–Ω—É—Å –¢–æ—Ä–≤–∞–ª—å–¥—Å',
      '–ë–∏–ª–ª –ì–µ–π—Ç—Å',
    ],               
    correct: 0,
  },
  {
    title: '–ö–∞–∫–æ–π –∏–∑ —ç—Ç–∏—Ö —è–∑—ã–∫–æ–≤ –∏–∑–æ–±—Ä–µ–ª–∏ Apple?',
    variants: [
      'Python',
      'Java',
      'Swift',
    ],               
    correct: 2,
  },
  {
    title: '–ù–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ –±—ã–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω Minecraft?',
    variants: [
      'C#',
      'Java',
      'C++',
    ],               
    correct: 1,
  },
];

function Result({ correct, rank }) {
  return (
    <div className="result">
      <img src="https://cdn-icons-png.flaticon.com/512/2278/2278992.png" />
      <h2>–í—ã –æ—Ç–≥–∞–¥–∞–ª–∏ {correct} –æ—Ç–≤–µ—Ç–∞ –∏–∑ {questions.length-1}</h2>
      <h2>{rank}</h2>
      <a href='/'>
        <button>–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
      </a>
    </div>
  );
}

function Game({ step, question, onClickVariant }) {
  const percentage = Math.round((step / questions.length) * 100);

  return (
    <>
      <div className="progress">
        <div style={{ width: `${percentage}%` }} className="progress__inner"></div>
      </div>
      <h1>{question.title}</h1>
      <ul>
        {question.variants.map((text, index) => (
          <li key={text} onClick={() => onClickVariant(index)}>
            {text}
          </li>
        ))}
      </ul>
    </>
  );
}

function App() {
  const [step, setStep] = React.useState(0);
  const [correct, setCorrect] = React.useState(0);
  const [rank, setRank] = React.useState("");

  const question = questions[step];

  useEffect(() => {
    let rank;

    switch (true) {
        case correct === 10:
            rank = "–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ,–ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!üòé";
            break;
        case correct >= 7 && correct < 10:
            rank = "–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Çüòä";
            break;
        case correct <=6 && correct>3:
            rank = "–°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—ÇüòÑ";
            break;
        case correct <=3 && correct>0:
          rank="–ü–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Çüòë"
            break;
        // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —É—Å–ª–æ–≤–∏—è –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        default:
           rank="–í—ã –Ω–∞–±—Ä–∞–ª–∏ 0 –±–∞–ª–ª–æ–≤,–æ—á–µ–Ω—å –ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Çüò†"
            break;
    }
    setRank(rank)
}, [correct]);


  const onClickVariant = (index) => {
    console.log(step, index);
    setStep(step + 1);

    if (index === question.correct) {
      setCorrect(correct + 1);
    }
  };

  return (
    <div className="App">
      {step !== questions.length ? (
        <Game question={question} onClickVariant={onClickVariant} step={step} />
      ) : (
        <Result correct={correct} rank={rank} />
      )}
    </div>
  );
}

export default App;

